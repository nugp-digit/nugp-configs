ReportDefinitions:
- reportName: PTReceiptRegister
  decryptionPathId: PTReceiptRegister
  summary: Report is used for audit, day-end, and year-end finance reconciliation activities 
  version: 1.0.0
  moduleName: pt-reports
  sourceColumns:
  - name: receiptnumber
    label: reports.pt.receiptnumber
    type: string
    source: pt
    total: false
  - name: paymentdate
    label: reports.pt.paymentdate
    type: string
    source: pt
    total: false
  - name: name
    label: reports.pt.consumername
    type: string
    source: pt
    total: false
  - name: user_uuid
    label: reports.pt.user_uuid
    type: string
    source: pt
    showColumn: false 
  - name: amountCollected
    label: reports.pt.amountCollected
    type: string
    source: pt
    total: true
  - name: payerName
    label: reports.pt.payerName
    type: string
    source: pt
    total: false
  - name: transactionnumber
    label: reports.pt.transactionnumber
    type: string
    source: pt
    total: false
  - name: chequeNo
    label: reports.pt.chequeNo
    type: string
    source: pt
    total: false

  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND ed.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND ed.receiptdate <= $toDate
  - name: receiptstatus
    label: receiptstatus
    type: singlevaluelist
    pattern: 'list://NEW:New,DEPOSITED:Deposited,DISHONOURED:Dishonoured'
    source: pt
    isMandatory: false
    searchClause: AND ep.paymentstatus = $receiptstatus
  - name: collectorname
    label: reports.pt.collectorname
    type: singlevaluelist
    pattern: http://egov-hrms:8080/egov-hrms/employees/_search?tenantId=$tenantid&roles=PT_CEMP|$.Employees[*].user.id|$.Employees[*].user.name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND ep.createdby= $collectorname   
  query: |
        SELECT receiptnumber,payerName,To_char(To_timestamp(ed.receiptdate / 1000), 'DD/MM/YYYY') AS paymentdate,users.name as name,users.uuid as user_uuid,
        transactionnumber,totalamountpaid AS amountCollected,ep.instrumentnumber as chequeNo,ROW_NUMBER() OVER(PARTITION BY receiptnumber) AS RowNum FROM egcl_payment AS ep
        JOIN egcl_paymentdetail AS ed ON ep.id = ed.paymentid JOIN egcl_bill as bill on ed.billid=bill.id JOIN eg_pt_property as property on bill.consumercode=property.propertyid JOIN eg_pt_owner as owner on property.id=owner.propertyid  JOIN eg_user as users on owner.userid=users.uuid where 1=1  and ed.businessservice='PT' and ep.paymentstatus !='CANCELLED' and ep.tenantid=$tenantid and owner.status='ACTIVE' and property.status='ACTIVE'
  orderby: order by ed.receiptdate desc

- reportName: PTCollectionReport
  decryptionPathId: PTCollectionReport
  summary: It helps administrators track the collection in the ULB and the employee collection performance. 
  version: 1.0.0
  moduleName: pt-reports
  sourceColumns:
  - name: locality
    label: reports.pt.locality
    type: string
    source: pt
    total: false
    localisationPrefix: TENANTS_MOHALLA_
    isLocalisationRequired: true
  - name: name
    label: reports.pt.collectorname
    type: string
    source: pt
    total: false
  - name: user_uuid
    label: reports.pt.user_uuid
    type: string
    source: pt
    showColumn: false
  - name: paymentinstrument
    label: reports.pt.paymentinstrument
    type: string
    source: pt
    total: false
  - name: totaltransactions
    label: reports.pt.totaltransactions
    type: string
    source: pt
    total: false  
  - name: amountCollected
    label: reports.pt.amountCollected
    type: string
    source: pt
    total: true
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND ed.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND ed.receiptdate <= $toDate
  - name: locality
    label: reports.pt.locality
    type: singlevaluelist
    pattern: http://egov-location.egov:8080/egov-location/location/v11/boundarys/_search?hierarchyTypeCode=ADMIN&boundaryType=Locality&tenantId=$tenantid|$.TenantBoundary[0].boundary.*.code|$.TenantBoundary[0].boundary.*.code
    source: pt
    wrapper: true
    isMandatory: false
    localisationPrefix: TENANTS_MOHALLA_
    isLocalisationRequired: true
    searchClause: AND ptd.locality = $locality  
  - name: paymentinstrument
    label: paymentinstrument
    type: singlevaluelist
    pattern: 'list://CASH:CASH,CARD:CARD,DD:DD,CHEQUE:CHEQUE'
    source: pt
    isMandatory: false
    searchClause: AND paymentmode = $paymentinstrument  
  query: |
        SELECT ptd.locality AS locality, users.name as name,users.uuid as user_uuid, count(*) as totaltransactions,sum(totalamountpaid) AS amountCollected,paymentmode AS paymentinstrument FROM egcl_payment AS ep
        JOIN egcl_paymentdetail AS ed ON ep.id = ed.paymentid JOIN egcl_bill  as bill on ed.billid=bill.id JOIN eg_pt_property as property on bill.consumercode=property.propertyid JOIN eg_pt_address as ptd on property.id=ptd.propertyid JOIN eg_user as users on ep.createdby::int=users.id JOIN eg_userrole_v1 as userrole on users.id=userrole.user_id  where 1=1  and ed.businessservice='PT' and ep.paymentstatus !='CANCELLED' and ep.tenantid=$tenantid and userrole.role_tenantid=$tenantid and ep.paymentmode!='ONLINE' and userrole.role_code='PT_CEMP' and property.status='ACTIVE'
  groupby: group by locality,name,paymentinstrument,user_uuid

- reportName: DefaulterReport
  decryptionPathId: DefaulterReport
  summary: Report is usually generated weekly/monthly to send notice to the defaulters and used only in the demand-based systems.
  version: 1.0.0
  moduleName: pt-reports
  sourceColumns:
  - name: propertyid
    label: reports.pt.propertyid
    type: string
    source: pt
    total: false
  - name: name
    label: Owner Name
    type: string
    source: pt
    total: false
  - name: mobilenumber
    label: Mobile Number
    type: string
    source: pt
    total: false
  - name: guardian
    label: Guardian's Name
    type: string
    source: pt
    total: false
  - name: relation
    label: Guardian's Relation
    type: string
    source: pt
    total: false
  - name: locality
    label: Locality
    type: string
    source: pt
    total: false
    localisationPrefix: TENANTS_MOHALLA_
    isLocalisationRequired: true
  - name: taxDue
    label: Tax Due
    type: string
    source: pt
    total: true
  - name: taxDueYear
    label: FY Wise Due Tax
    type: string
    source: pt
    showColumn: true
  searchParams:
  - name: locality
    label: reports.pt.locality
    type: singlevaluelist
    pattern: http://egov-location.egov:8080/egov-location/location/v11/boundarys/_search?hierarchyTypeCode=ADMIN&boundaryType=Locality&tenantId=$tenantid|$.TenantBoundary[0].boundary.*.code|$.TenantBoundary[0].boundary.*.code
    source: pt
    wrapper: true
    isMandatory: false
    localisationPrefix: TENANTS_MOHALLA_
    isLocalisationRequired: true
    searchClause: AND locality = $locality
  - name: usagetype
    label: reports.pt.usagetype
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=PropertyTax&masterName=UsageCategory&filter=%24.%2A%5B%3F%28%40.code%20%3D~%20%2F%5BA-Z%5D%2A%5C.%5BA-Z%5D%2A%5C.%5BA-Z%5D%2A%5C.%5BA-z%5D%2A%2F%29%5D|$.MdmsRes.PropertyTax.UsageCategory.*.code|$.MdmsRes.PropertyTax.UsageCategory.*.name
    source: pt
    wrapper: true
    isMandatory: false
    localisationPrefix: PROPERTYTAX_BILLING_SLAB_
    isLocalisationRequired: false
    searchClause: AND usagecategory = $usagetype
  query: |
        select * from (SELECT  property.propertyid, usr.name as name, usr.mobilenumber as mobilenumber,usr.guardian as guardian,usr.guardianrelation as relation, property.usagecategory, locality  FROM EG_PT_PROPERTY property INNER JOIN EG_PT_ADDRESS address ON property.id = address.propertyid INNER JOIN EG_PT_OWNER owner ON property.id = owner.propertyid INNER JOIN eg_user usr ON owner.userid=usr.uuid WHERE  property.tenantId=$tenantid AND owner.status = 'ACTIVE' AND property.status = 'ACTIVE') as propertydata INNER JOIN (select consumercode,sum(taxdue) as taxDue, STRING_AGG(year || '(Rs.' || taxdue || ')',',')  as taxDueYear from ( select d.consumercode, (to_char((To_timestamp(d.taxperiodfrom/1000) at time Zone 'Asia/Kolkata'),'YYYY') || '-' || to_char((To_timestamp(d.taxperiodto/1000) at time Zone 'Asia/Kolkata'),'YY')) as year ,  sum(dd.taxamount)-sum(dd.collectionamount) as taxdue from egbs_demanddetail_v1 dd, egbs_demand_v1 d where dd.demandid=d.id and d.status!='CANCELLED' and dd.tenantid=$tenantid and d.tenantid=$tenantid and (to_char((To_timestamp(d.taxperiodfrom/1000) at time Zone 'Asia/Kolkata'),'YYYY') || '-' || to_char((To_timestamp(d.taxperiodto/1000) at time Zone 'Asia/Kolkata'),'YY')) != '2023-24' group by d.consumercode,(to_char((To_timestamp(d.taxperiodfrom/1000) at time Zone 'Asia/Kolkata'),'YYYY') || '-' || to_char((To_timestamp(d.taxperiodto/1000) at time Zone 'Asia/Kolkata'),'YY'))) tax where taxDue>0 group by tax.consumercode) as taxdata on propertydata.propertyid=taxdata.consumercode
  orderby: order by taxDue desc
- reportName: PTGrievances
  decryptionPathId: DescriptionReport
  summary: Fetches PT complaint
  version: 1.0.0
  moduleName: pt-reports
  externalService:
  - entity: $.MdmsRes.RAINMAKER-PGR.ServiceDefs
    apiURL: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=RAINMAKER-PGR&masterName=ServiceDefs&tenantId=$tenantId
    keyOrder: serviceCode,department,slaHours
    tableName: tbl_dept
  - entity: $.MdmsRes.common-masters.Department
    apiURL: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=common-masters&masterName=Department&tenantId=$tenantId
    keyOrder: name,code
    tableName: tbl_def_dept
  - entity: $.TenantBoundary[0].boundary
    apiURL: http://egov-location:8080/egov-location/location/v11/boundarys/_search?hierarchyTypeCode=ADMIN&boundaryType=Locality&tenantId=$tenantId
    keyOrder: name,code
    tableName: tbl_boundary
  sourceColumns:
  - name: complaintId
    label: reports.pgr.complaintId
    type: string
    source: eg_pgr_service
    total: false
  - name: complainttype
    label: reports.pgr.complainttype
    type: string
    source: eg_pgr_service
    total: false
  - name: dateofcomplaint
    label: reports.pgr.dateofcomplaint
    type: string
    source: eg_pgr_service
    total: false
  - name: status
    label: reports.pgr.status
    type: string
    source: eg_pgr_service
    total: false
  - name: ward
    label: reports.pgr.ward
    type: string
    source: eg_pgr_service
    total: false
  - name: name
    label: reports.pgr.name
    type: string
    source: eg_pgr_service
    total: false
  - name: address
    label: reports.pgr.address
    type: string
    source: eg_pgr_service
    total: false
  - name: description
    label: reports.pgr.description
    type: string
    source: eg_pgr_service
    total: false
  - name: slahours
    label: reports.pgr.slahours
    type: string
    source: eg_pgr_service
    total: false
  searchParams:
  - name: ulb
    label: ULB
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND eg_pgr_service_v2.tenantid = $ulb
  - name: fromDate
    label: reports.pgr.datefrom
    type: epoch
    source: eg_pgr_service
    isMandatory: false
    searchClause: AND eg_pgr_service_v2.createdtime >= $fromDate
  - name: toDate
    label: reports.pgr.dateto
    type: epoch
    source: eg_pgr_service
    isMandatory: false
    searchClause: AND eg_pgr_service_v2.createdtime <= $toDate
  - name: complainttype
    label: Complaint_Type
    type: singlevaluelist
    pattern: 'list://PropertyTaxAssessment:Property Tax Assessment,PropertyTaxAppealPetition:Property Tax Appeal Petition,ChangeOfTitleOrOwnershipOfProperty:Change Of Title Or Ownership Of Property,DealerRegistration:Dealer Registration,DealerAssessment:Dealer Assessment,RefundClaims:Refund Claims'
    source: pt
    isMandatory: false
    searchClause: AND eg_pgr_service_v2.servicecode = $complainttype
  query: |
    SELECT 
    DISTINCT ON (servicerequestid)
    ua.name as lastassignedto,
    servicerequestid AS complaintId,
    regexp_replace(servicecode, '([a-z])([A-Z])', '\1 \2','g') AS complainttype,
    to_char(to_timestamp(TRUNC(CAST(eg_pgr_service_v2.createdtime AS bigint) / 1000)), 'DD/MM/YY') AS dateofcomplaint,
    to_char(to_timestamp(TRUNC(CAST(epa.createdtime AS bigint) / 1000)), 'DD/MM/YY') AS dateofassignment,
    Initcap(eg_pgr_service_v2.applicationstatus) as status,
    (SELECT boundary_def.name FROM (VALUES tbl_boundary) AS boundary_def(name,code) WHERE boundary_def.code=eg_pgr_address_v2.locality) as ward,
    eg_user.name,
    eg_user.id,
    eg_user.tenantid,
    eg_pgr_address_v2.landmark,
    (with address_data as(select string_agg(value, ', ') from (select (json_each_text(row_to_json(x1))).value from (SELECT epa.landmark, (SELECT boundary_def.name FROM (VALUES tbl_boundary) AS boundary_def(name,code) WHERE boundary_def.code=epa.locality), epa.city, epa.pincode FROM eg_pgr_address_v2 epa WHERE epa.parentid=eg_pgr_service_v2.id) x1) as x2)SELECT address_data.string_agg AS address FROM address_data),
    description,
    deptmap_def.name as department,
    (SELECT (CASE WHEN (((SELECT deptmap.slaHours FROM (VALUES tbl_dept) AS deptmap(serviceCode, department, slaHours) WHERE deptmap.serviceCode = eg_pgr_service_v2.servicecode)::integer / 24) - ((((select extract(epoch from now())) * 1000) - eg_pgr_service_v2.createdtime)::bigint/86400000)) < 1 THEN CONCAT('Overdue by ', ((((select extract(epoch from now())) * 1000) - eg_pgr_service_v2.createdtime)::bigint/86400000) - ((SELECT deptmap.slaHours FROM (VALUES tbl_dept) AS deptmap(serviceCode, department, slaHours) WHERE deptmap.serviceCode = eg_pgr_service_v2.servicecode)::integer / 24), ' days') ELSE CONCAT(((SELECT deptmap.slaHours FROM (VALUES tbl_dept) AS deptmap(serviceCode, department, slaHours) WHERE deptmap.serviceCode = eg_pgr_service_v2.servicecode)::integer / 24) - ((((select extract(epoch from now())) * 1000) - eg_pgr_service_v2.createdtime)::bigint/86400000), ' days remaining') END) as slaHours)
    FROM eg_pgr_service_v2
    left outer join eg_pgr_address_v2 on eg_pgr_address_v2.parentid = eg_pgr_service_v2.id
    left outer join eg_user on eg_user.uuid = eg_pgr_service_v2.accountid
    left outer join eg_wf_processinstance_v2 as epa on epa.businessId = eg_pgr_service_v2.servicerequestid and epa.action in ('ASSIGN','REASSIGN')
    left outer join eg_wf_assignee_v2 as asg on asg.processinstanceid =  epa.id
    left outer join eg_user as ua on ua.uuid = asg.assignee
    INNER JOIN (VALUES tbl_dept) AS departmap(serviceCode, department) USING (servicecode)
    INNER JOIN (VALUES tbl_def_dept) AS deptmap_def(name,code) ON departmap.department = deptmap_def.code
    WHERE
    eg_pgr_address_v2.parentid = eg_pgr_service_v2.id
    AND eg_pgr_service_v2.applicationstatus IN ('PENDINGFORASSIGNMENT','PENDINGATLME','PENDINGFORREASSIGNMENT','REJECTED') AND eg_pgr_service_v2.servicecode IN('PropertyTaxAppealPetition','PropertyTaxAssessment','ChangeOfTitleOrOwnershipOfProperty','DealerRegistration','DealerAssessment','RefundClaims')
  orderby: ORDER BY servicerequestid, epa.createdtime desc
  
- reportName: PTCoverageReport
  summary: Report is used for audit, day-end, and year-end finance reconciliation activities 
  version: 1.0.0
  moduleName: pt-reports
  sourceColumns:
  - name: Total_properties
    label: Total Properties
    type: string
    source: pt
    total: false
  - name: tax_paying
    label: Properties Paying Tax
    type: string
    source: pt
    total: false
  - name: RESIDENTIAL
    label: RESIDENTIAL
    type: string
    source: pt
    total: false
  - name: NONRESIDENTIAL
    label: NON RESIDENTIAL
    type: string
    source: pt
    total: false 
  - name: MIXED
    label: MIXED
    type: string
    source: pt
    total: false
  searchParams:
  - name: locality
    label: reports.pt.locality
    type: singlevaluelist
    pattern: http://egov-location.egov:8080/egov-location/location/v11/boundarys/_search?hierarchyTypeCode=ADMIN&boundaryType=Locality&tenantId=$tenantid|$.TenantBoundary[0].boundary.*.code|$.TenantBoundary[0].boundary.*.code
    source: pt
    wrapper: true
    isMandatory: false
    localisationPrefix: TENANTS_MOHALLA_
    isLocalisationRequired: true
    searchClause: AND pa.locality = $locality   
  query: |
        with paymentdata as(
        select
            distinct on (bill.consumercode)
            bill.consumercode,p.transactiondate 
        from
            egcl_payment p
        left outer join egcl_paymentdetail pd on
            pd.paymentid = p.id
        --left outer join egbs_bill_v1 bill on
        left outer join egcl_bill bill on
            pd.billid = bill.id
        where
            pd.businessservice = 'PT'
            and p.paymentstatus != 'CANCELLED'
        order by bill.consumercode,p.transactiondate desc
        
        )
        
        select
        count(distinct propData.propertyid) as Total_properties,count(pd.consumercode) as tax_paying,
        COUNT(case when (select usagecategory from eg_pt_property where propertyid=pd.consumercode and status='ACTIVE') = 'RESIDENTIAL' then 1 end) as RESIDENTIAL,
        COUNT(case when (select usagecategory from eg_pt_property where propertyid=pd.consumercode and status='ACTIVE') like '%NONRESIDENTIAL%' then 1 end) as NONRESIDENTIAL,
        COUNT(case when (select usagecategory from eg_pt_property where propertyid=pd.consumercode and status='ACTIVE') = 'MIXED' then 1 end) as MIXED
        from
        eg_pt_property propData JOIN eg_pt_address pa ON pa.propertyid=propData.id
        LEFT OUTER JOIN paymentdata pd on pd.consumercode = propdata.propertyid  where propData.status='ACTIVE'